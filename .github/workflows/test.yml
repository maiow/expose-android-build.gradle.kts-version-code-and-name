name: Test Action

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create mock build.gradle.kts
        run: |
          mkdir -p app
          echo "android {" > app/build.gradle.kts
          echo "    defaultConfig {" >> app/build.gradle.kts
          echo "        versionName = \"4.22.0\"" >> app/build.gradle.kts
          echo "        versionCode = 123" >> app/build.gradle.kts
          echo "    }" >> app/build.gradle.kts
          echo "}" >> app/build.gradle.kts

      - name: Run action with EXPOSE_CODE true and EXPOSE_NAME true
        uses: ./
        with:
          EXPOSE_CODE: 'true'
          EXPOSE_NAME: 'true'

      - name: Validate versionName and versionCode with EXPOSE_CODE and EXPOSE_NAME true
        run: |
          content=$(cat app/build.gradle.kts)
          if [[ $content == *"versionName = \"4.22.0\""* && $content == *"versionCode = 123"* ]]; then
            echo "Mock build.gradle.kts contains versionName and versionCode, NAME is $ANDROID_VERSION_NAME, CODE is $ANDROID_VERSION_CODE"
          else
            echo "Mock build.gradle.kts does not contain expected values"
            exit 1
          fi

      - name: Verify Environment Variables with EXPOSE_CODE and EXPOSE_NAME true
        run: |
          echo "ANDROID_VERSION_NAME: $ANDROID_VERSION_NAME"
          echo "ANDROID_VERSION_CODE: $ANDROID_VERSION_CODE"
          if [[ $ANDROID_VERSION_NAME == 4.22.0 && $ANDROID_VERSION_CODE == 123 ]]; then
            echo "Environment variables are set correctly."
          else
            echo "Environment variables are not set as expected."
            exit 1
          fi

      - name: Cleanup extracted-values file
        run: rm -f extracted-values
        continue-on-error: true  # Continue even if the file doesn't exist

      - name: Run action with EXPOSE_CODE false and EXPOSE_NAME true
        uses: ./
        with:
          EXPOSE_CODE: 'false'
          EXPOSE_NAME: 'true'

      - name: Validate versionName with EXPOSE_CODE false and EXPOSE_NAME true
        run: |
          content=$(cat app/build.gradle.kts)
          if [[ $content == *"versionName = \"4.22.0\""* ]]; then
            echo "Mock build.gradle.kts contains versionName, NAME is $ANDROID_VERSION_NAME"
          else
            echo "Mock build.gradle.kts does not contain expected versionName"
            exit 1
          fi

      - name: Verify Environment Variables with EXPOSE_CODE false and EXPOSE_NAME true
        run: |
          echo "ANDROID_VERSION_NAME: $ANDROID_VERSION_NAME"
          if [[ $ANDROID_VERSION_NAME == 4.22.0 ]]; then
            echo "Environment variable for name is set correctly."
          else
            echo "Environment variable for name is not set as expected."
            exit 1
          fi

      - name: Cleanup extracted-values file
        run: rm -f extracted-values
        continue-on-error: true  # Continue even if the file doesn't exist

      - name: Run action with EXPOSE_CODE true and EXPOSE_NAME false
        uses: ./
        with:
          EXPOSE_CODE: 'true'
          EXPOSE_NAME: 'false'

      - name: Validate versionCode with EXPOSE_CODE true and EXPOSE_NAME false
        run: |
          content=$(cat app/build.gradle.kts)
          if [[ $content == *"versionCode = 123"* ]]; then
            echo "Mock build.gradle.kts contains versionCode, CODE is $ANDROID_VERSION_CODE"
          else
            echo "Mock build.gradle.kts does not contain expected versionCode"
            exit 1
          fi

      - name: Verify Environment Variables with EXPOSE_CODE true and EXPOSE_NAME false
        run: |
          echo "ANDROID_VERSION_CODE: $ANDROID_VERSION_CODE"
          if [[ $ANDROID_VERSION_CODE == 123 ]]; then
            echo "Environment variable for code is set correctly."
          else
            echo "Environment variable for code is not set as expected."
            exit 1
          fi

      - name: Cleanup extracted-values file
        run: rm -f extracted-values
        continue-on-error: true  # Continue even if the file doesn't exist

      - name: Run action with EXPOSE_CODE false and EXPOSE_NAME false
        uses: ./
        with:
          EXPOSE_CODE: 'false'
          EXPOSE_NAME: 'false'

      - name: Validate no version information extracted with EXPOSE_CODE false and EXPOSE_NAME false
        run: |
          if [[ -z $ANDROID_VERSION_NAME && -z $ANDROID_VERSION_CODE ]]; then
            echo "No version information extracted as expected."
          else
            echo "Version information extracted when it should not have been."
            exit 1
          fi